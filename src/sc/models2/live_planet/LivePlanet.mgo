
package live_planet

import(
	"github.com/gocql/gocql"
	"sync"
	"fmt"
	"strings"
	"strconv"
	model "sc/model2"
	"sc/logger"
	"sc/errors"
	model_building "sc/models2/building"
	// "sc/ws/command"
)

var TableName		= "live_planets"
var UUIDFieldName	= "planet_uuid"

type Connection interface {
	Send(string)	
}

type Fields struct {
	PlayerUUID		gocql.UUID		`cql:"owner_player_uuid"`
	Buildings		[]gocql.UUID	`cql:"buildings_list"`

	Population		float64			`cql:"population"`
	PopulationSInc	float64			`cql:"population_sinc"`
	PopulationUsage	float64			`cql:"population_usage"`
	PopulationAvail	float64			`cql:"population_avail"`

	Energy			float64			`cql:"energy"`
	EnergyAvail		float64			`cql:"energy_avail"`

	Crystals		float64			`cql:"crystals"`
	CrystalsSInc	float64			`cql:"crystals_sinc"`

	Minerals		float64			`cql:"minerals"`
	MineralsSInc	float64			`cql:"minerals_sinc"`

	TreatTime		int64			`cql:"treat_time"`

	QueueBuildType	[]string		`cql:"queue_build_type"`
	QueueBuildX		[]int			`cql:"queue_build_x"`
	QueueBuildY		[]int			`cql:"queue_build_y"`
	BuildInProgress	[]gocql.UUID	`cql:"build_in_progress"`

	TurnOnBuildings	[]gocql.UUID	`cql:"turn_on_buildings"`


	Connection		Connection
	DMutex			sync.Mutex

}

func (lp *Fields) MakeClientInfo() (info model.Fields) {

    info = model.Fields{}
    var buildings []interface{}

	for _, uuid := range lp.Buildings {
		b, _ := model_building.Get(uuid)
		if b != nil {
			buildings = append(buildings, b.MakeClientInfo())
		}
	}
	
	info["population"] = lp.Population
	info["population_avail"] = lp.PopulationAvail
	info["minerals"] = lp.Minerals
	info["crystals"] = lp.Crystals
	info["energy"] = lp.Energy
	info["energy_avail"] = lp.EnergyAvail

	info["buildings"] = buildings

	return
}

func (lp *Fields) GetConnection() (Connection) {
	return lp.Connection
}

func (lp *Fields) NCUpdatePlanetResources() (string) {
	return fmt.Sprintf(`{"command":"nc_update_planet_resource","planet_uuid":"%s","resources":{"minerals":%d,"crystals":%d,"population_avail":%d,"energy":%d,"energy_avail":%d}}`,
		lp.UUID.String(),
		int(lp.Minerals),
		int(lp.Crystals),
		int(lp.PopulationAvail),
		int(lp.Energy),
		int(lp.EnergyAvail))
}
